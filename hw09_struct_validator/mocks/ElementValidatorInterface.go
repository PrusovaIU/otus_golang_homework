// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	errors "github.com/PrusovaIU/otus_golang_homework/hw09_struct_validator/errors"

	mock "github.com/stretchr/testify/mock"

	reflect "reflect"
)

// ElementValidatorInterface is an autogenerated mock type for the ElementValidatorInterface type
type ElementValidatorInterface struct {
	mock.Mock
}

type ElementValidatorInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *ElementValidatorInterface) EXPECT() *ElementValidatorInterface_Expecter {
	return &ElementValidatorInterface_Expecter{mock: &_m.Mock}
}

// Validate provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *ElementValidatorInterface) Validate(_a0 reflect.Value, _a1 reflect.Kind, _a2 string, _a3 string) errors.ValidationError {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 errors.ValidationError
	if rf, ok := ret.Get(0).(func(reflect.Value, reflect.Kind, string, string) errors.ValidationError); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Get(0).(errors.ValidationError)
	}

	return r0
}

// ElementValidatorInterface_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type ElementValidatorInterface_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//   - _a0 reflect.Value
//   - _a1 reflect.Kind
//   - _a2 string
//   - _a3 string
func (_e *ElementValidatorInterface_Expecter) Validate(_a0 interface{}, _a1 interface{}, _a2 interface{}, _a3 interface{}) *ElementValidatorInterface_Validate_Call {
	return &ElementValidatorInterface_Validate_Call{Call: _e.mock.On("Validate", _a0, _a1, _a2, _a3)}
}

func (_c *ElementValidatorInterface_Validate_Call) Run(run func(_a0 reflect.Value, _a1 reflect.Kind, _a2 string, _a3 string)) *ElementValidatorInterface_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(reflect.Value), args[1].(reflect.Kind), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *ElementValidatorInterface_Validate_Call) Return(_a0 errors.ValidationError) *ElementValidatorInterface_Validate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ElementValidatorInterface_Validate_Call) RunAndReturn(run func(reflect.Value, reflect.Kind, string, string) errors.ValidationError) *ElementValidatorInterface_Validate_Call {
	_c.Call.Return(run)
	return _c
}

// NewElementValidatorInterface creates a new instance of ElementValidatorInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewElementValidatorInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ElementValidatorInterface {
	mock := &ElementValidatorInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
